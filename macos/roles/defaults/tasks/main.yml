---
# Appearance
- name: "Configure appearance preferences"
  community.general.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
    state: "present"
  loop:
    # Click in the scroll bar to (jump to the spot that's clicked)
    - { domain: "NSGlobalDomain", key: "AppleScrollerPagingBehaviour", value: "true", type: "boolean" }

# Control Centre
- name: "Configure menu bar"
  community.general.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
    state: "present"
  loop:
    # Wi-Fi
    - { domain: "com.apple.controlcenter", key: "NSStatusItem Visible WiFi", value: "true", type: "boolean" }
    # Bluetooth
    - { domain: "com.apple.controlcenter", key: "NSStatusItem Visible Bluetooth", value: "true", type: "boolean" }
    # AirDrop
    - { domain: "com.apple.controlcenter", key: "NSStatusItem Visible AirDrop", value: "false", type: "boolean" }
    # Sound
    - { domain: "com.apple.controlcenter", key: "NSStatusItem Visible Sound", value: "true", type: "boolean" }
    # Now Playing
    - { domain: "com.apple.controlcenter", key: "NSStatusItem Visible NowPlaying", value: "true", type: "boolean" }
    # Battery
    - { domain: "com.apple.controlcenter", key: "NSStatusItem Visible Battery", value: "true", type: "boolean" }
    # Menu Bar Only > Spotlight
    - { domain: "com.apple.systemuiserver", key: "NSStatusItem Visible Item-0", value: "false", type: "boolean" }
    # Menu Bar Only > TimeMachine
    - { domain: "com.apple.systemuiserver", key: "NSStatusItem Visible com.apple.menuextra.TimeMachine", value: "true", type: "boolean" }
    - domain: "com.apple.systemuiserver"
      key: "menuExtras"
      value:
        - "/System/Library/CoreServices/Menu Extras/TimeMachine.menu"
      type: "array"

# Desktop and Dock
- name: "Configure Dock"
  community.general.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
    state: "present"
  loop:
    # Position on screen
    - { domain: "com.apple.dock", key: "orientation", value: "left", type: "string" }
    # Minimize windows using
    - { domain: "com.apple.dock", key: "mineffect", value: "scale", type: "string" }
    # Double-click a window's title bar to
    - { domain: "NSGlobalDomain", key: "AppleActionOnDoubleClick", value: "Maximize", type: "string" }
    # Minimize windows into application icon
    - { domain: "com.apple.dock", key: "minimize-to-application", value: "true", type: "boolean" }
    # Automatically hide and show the dock
    - { domain: "com.apple.dock", key: "autohide", value: "true", type: "boolean" }
    # Show indicators for open applications
    - { domain: "com.apple.dock", key: "show-process-indicators", value: "true", type: "boolean" }

# Desktop and Dock > Mission Control
- name: "Configure Mission Control"
  community.general.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
    state: "present"
  vars:
    # Modifier key magic values
    modifier_none: "0"
    modifier_control: "262144"
    modifier_option: "524288"
    modifier_command: "1048576"
    # Action magic values
    nothing: "1"
    mission_control: "2"
    application_windows: "3"
    desktop: "4"
    start_screen_saver: "5"
    disable_screen_saver: "6"
    put_display_to_sleep: "10"
    launchpad: "11"
    notification_centre: "12"
    lock_screen: "13"
  loop:
    # Automatically rearrange Spaces based on most recent use
    - { domain: "com.apple.dock", key: "mru-spaces", value: "false", type: "boolean" }
    # When switching to an application, switch to a Space with open windows for the application
    - { domain: "NSGlobalDomain", key: "AppleSpacesSwitchOnActivate", value: "true", type: "boolean" }
    # Group windows by application
    - { domain: "com.apple.dock", key: "expose-group-apps", value: "true", type: "boolean" }
    # Displays have separate spaces
    - { domain: "com.apple.spaces", key: "spans-displays", value: "false", type: "boolean" }
    # Hot corners >
    - { domain: "com.apple.dock", key: "wvous-bl-corner", value: "{{ application_windows }}", type: "int" }
    - { domain: "com.apple.dock", key: "wvous-bl-modifier", value: "{{ modifier_command }}", type: "int" }
    - { domain: "com.apple.dock", key: "wvous-br-corner", value: "{{ launchpad }}", type: "int" }
    - { domain: "com.apple.dock", key: "wvous-br-modifier", value: "{{ modifier_command }}", type: "int" }
    - { domain: "com.apple.dock", key: "wvous-tl-corner", value: "{{ mission_control }}", type: "int" }
    - { domain: "com.apple.dock", key: "wvous-tl-modifier", value: "{{ modifier_command }}", type: "int" }
    - { domain: "com.apple.dock", key: "wvous-tr-corner", value: "{{ notification_centre }}", type: "int" }
    - { domain: "com.apple.dock", key: "wvous-tr-modifier", value: "{{ modifier_command }}", type: "int" }

# Keyboard
- name: "Configure keyboard"
  community.general.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
    state: "present"
  loop:
    # Key repeat rate
    - { domain: "NSGlobalDomain", key: "KeyRepeat", value: "2", type: "float" }
    # Delay until repeat
    - { domain: "NSGlobalDomain", key: "InitialKeyRepeat", value: "15", type: "float" }
    # Correct spelling automatically
    - { domain: "NSGlobalDomain", key: "NSAutomaticSpellingCorrectionEnabled", value: "false", type: "boolean" }
    - { domain: "NSGlobalDomain", key: "WebAutomaticSpellingCorrectionEnabled", value: "false", type: "boolean" }
    # Capitalise words automatically
    - { domain: "NSGlobalDomain", key: "NSAutomaticCapitalizationEnabled", value: "false", type: "boolean" }
    # Add full stop with double space
    - { domain: "NSGlobalDomain", key: "NSAutomaticPeriodSubstitutionEnabled", value: "false", type: "boolean" }
    # Use smart quotes and dashes
    - { domain: "NSGlobalDomain", key: "NSAutomaticDashSubstitutionEnabled", value: "false", type: "boolean" }
    - { domain: "NSGlobalDomain", key: "NSAutomaticQuoteSubstitutionEnabled", value: "false", type: "boolean" }
    # Text replacements
    - { domain: "NSGlobalDomain", key: "NSUserDictionaryReplacementItems", value: [], type: "array" }
    # Accented characters popup on holding a key (not configurable via UI)
    - { domain: "NSGlobalDomain", key: "ApplePressAndHoldEnabled", value: "false", type: "boolean" }

# Mouse, Trackpad
- name: "Configure mouse and trackpad"
  community.general.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
    state: "present"
  loop:
    # Tracking speed
    - { domain: "NSGlobalDomain", key: "com.apple.mouse.scaling", value: "1.5", type: "float" }
    # Natural scrolling
    # TODO: com.apple.swipescrolldirection controls both trackpad and mouse. We need natural scroll for trackpad but otherwise for mouse.
    #- { domain: "NSGlobalDomain", key: "com.apple.swipescrolldirection", value: "false", type: "boolean" }
    # Tap to click
    - { domain: "com.apple.AppleMultitouchTrackpad", key: "Clicking", value: "true", type: "boolean" }
    # Swipe between pages
    - { domain: "NSGlobalDomain", key: "AppleEnableSwipeNavigateWithScrolls", value: "false", type: "boolean" }
    # Swipe between full-screen applications
    - { domain: "com.apple.AppleMultitouchTrackpad", key: "TrackpadThreeFingerHorizSwipeGesture", value: "2", type: "int" }
    - { domain: "com.apple.AppleMultitouchTrackpad", key: "TrackpadFourFingerHorizSwipeGesture", value: "2", type: "int" }
    # Notification Centre
    - { domain: "com.apple.AppleMultitouchTrackpad", key: "TrackpadTwoFingerFromRightEdgeSwipeGesture", value: "3", type: "int" }
    # Mission Control and App ExposÃ© (three fingers)
    - { domain: "com.apple.AppleMultitouchTrackpad", key: "TrackpadThreeFingerVertSwipeGesture", value: "2", type: "int" }
    - { domain: "com.apple.dock", key: "showMissionControlGestureEnabled", value: "true", type: "boolean" }
    - { domain: "com.apple.dock", key: "showAppExposeGestureEnabled", value: "true", type: "boolean" }
    # Launchpad
    - { domain: "com.apple.dock", key: "showLaunchpadGestureEnabled", value: "true", type: "boolean" }
    # Desktop
    - { domain: "com.apple.dock", key: "showDesktopGestureEnabled", value: "true", type: "boolean" }

# Finder
- name: "Configure Finder"
  community.general.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
    state: "present"
  vars:
    # Search scopes
    search_scope_this_mac: "SCev"
    search_scope_current_folder: "SCcf"
    search_scope_previous_scope: "SCsp"
    # View styles
    view_style_icon: "icnv"
    view_style_list: "Nlsv"
    view_style_column: "clmv"
    view_style_cover_flow: 'Flwv'
    # New Finder window targets
    window_target_computer: "PfCm"
    window_target_volume: "PfVo"
    window_target_home: "PfHm"
    window_target_desktop: "PfDe"
    window_target_documents: "PfDo"
    window_target_all: "PfAF"
    window_target_other: "PfLo"
  loop:
    # Advanced > Show all filename extensions
    - { domain: "NSGlobalDomain", key: "AppleShowAllExtensions", value: "true", type: "boolean" }
    # Advanced > Show warning before changing an extension
    - { domain: "com.apple.finder", key: "FXEnableExtensionChangeWarning", value: "true", type: "boolean" }
    # View > Show path bar
    - { domain: "com.apple.finder", key: "ShowPathbar", value: "true", type: "boolean" }
    # Set search scope
    - { domain: "com.apple.finder", key: "FXDefaultSearchScope", value: "{{ search_scope_current_folder }}", type: "string" }
    # Set preferred view style
    - { domain: "com.apple.finder", key: "FXPreferredViewStyle", value: "{{ view_style_list }}", type: "string" }
    # Set default path for new windows
    - { domain: "com.apple.finder", key: "NewWindowTarget", value: "{{ window_target_home }}", type: "string" }
    # Sort folders above files in Finder windows and Desktop
    - { domain: "com.apple.finder", key: "_FXSortFoldersFirst", value: "true", type: "boolean" }
    - { domain: "com.apple.finder", key: "_FXSortFoldersFirstOnDesktop", value: "true", type: "boolean" }
    # Show hidden files (CMD + Shift + .)
    - { domain: "com.apple.finder", key: "AppleShowAllFiles", value: "true", type: "boolean" }
    # Do not auto-select iCloud when saving a file
    - { domain: "NSGlobalDomain", key: "NSDocumentSaveNewDocumentsToCloud", value: "false", type: "boolean" }
    # Disable creation of Metadata Files on Network Volumes and USB Volumes
    - { domain: "com.apple.desktopservices", key: "DSDontWriteNetworkStores", value: "true", type: "boolean" }
    - { domain: "com.apple.desktopservices", key: "DSDontWriteUSBStores", value: "true", type: "boolean" }

# Time Machine
# In addition to this take a look at the time-machine-dev-exclusions.sh for more
- name: "Configure Time Machine exclusions"
  community.general.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
    state: "present"
    array_add: true
  vars:
    homedir: "/Users/ashhar.hasan"
  # needs superuser to change these
  become: true
  loop:
    - domain: "/Library/Preferences/com.apple.TimeMachine"
      key: "SkipPaths"
      type: "array"
      value:
        - "/Applications"
        - "/opt/homebrew"
        - "/private/var/db/diagnostics"   # frequently changing
        - "/private/var/db/uuidtext"      # frequently changing
        - "{{ homedir }}/.cache"
        - "{{ homedir }}/.jenv"
        - "{{ homedir }}/.liquidprompt"
        - "{{ homedir }}/.local"
        - "{{ homedir }}/.m2/mvnd"
        - "{{ homedir }}/.m2/repository"
        - "{{ homedir }}/.m2/wrapper"
        - "{{ homedir }}/.npm"
        - "{{ homedir }}/.sdkman"
        - "{{ homedir }}/.vscode"
        - "{{ homedir }}/.yarn"
        - "{{ homedir }}/.zcompcache"
        - "{{ homedir }}/Applications"
        - "{{ homedir }}/Downloads/LocalSend"
        - "{{ homedir }}/Downloads/VideoDownloadHelper"
        - "{{ homedir }}/go"
        - "{{ homedir }}/Library/Application Support/Code"
        - "{{ homedir }}/Library/Application Support/Google"
        - "{{ homedir }}/Library/Application Support/Slack"
        - "{{ homedir }}/Library/Application Support/Spotify"
        - "{{ homedir }}/Library/Application Support/Stats"
        - "{{ homedir }}/Library/Application Support/zoom.us"
        - "{{ homedir }}/Library/Containers/com.apple.mediaanalysisd"
        - "{{ homedir }}/Library/Containers/com.apple.Safari"
        - "{{ homedir }}/Library/IdentityServices"    # frequently changing
        - "{{ homedir }}/Movies"
        - "{{ homedir }}/Music"
